/*
 * Copyright (C) 2013 Jon
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package net.jonathansmith.javadpad.client.threads.user.gui.pane;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseListener;

import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.LayoutStyle;
import javax.swing.ListSelectionModel;
import javax.swing.ScrollPaneConstants;

import net.jonathansmith.javadpad.client.gui.displayoptions.pane.ExistingRecordPane;
import net.jonathansmith.javadpad.common.database.Record;
import net.jonathansmith.javadpad.common.util.database.RecordsList;

/**
 *
 * @author Jon
 */
public class ExistingUserPane extends ExistingRecordPane {

    /**
     * Creates new form ExistingUserPane
     */
    public ExistingUserPane() {
        initComponents();
    }
    
    @Override
    public void addDisplayOptionListener(ActionListener listener) {
        this.submit.addActionListener(listener);
    }
    
    @Override
    public void addDisplayOptionMouseListener(MouseListener listener) {
        this.jTable1.addMouseListener(listener);
    }
    
    @Override
    public boolean isEventSourceSubmitButton(ActionEvent event) {
        if (event.getSource() == this.submit) {
            return true;
        }
        
        return false;
    }

    @Override
    public void insertRecords(RecordsList<Record> data) {
        ((UserTableModel) this.jTable1.getModel()).setData(data);
        this.jTable1.repaint();
    }

    @Override
    public Record getSelectedRecord() {
        int rowNum = this.jTable1.getSelectedRow();
        return ((UserTableModel) this.jTable1.getModel()).getData(rowNum);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new JScrollPane();
        jTable1 = new JTable();
        submit = new JButton();
        jScrollPane2 = new JScrollPane();
        jTextArea1 = new JTextArea();

        jTable1.setModel(new UserTableModel());
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTable1);

        submit.setText("Submit");

        jScrollPane2.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setMaximumSize(new Dimension(50, 32767));
        jScrollPane2.setMinimumSize(new Dimension(50, 23));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Please select the row which represents the user you wish to load.");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setMaximumSize(new Dimension(50, 2147483647));
        jTextArea1.setMinimumSize(new Dimension(50, 32));
        jTextArea1.setPreferredSize(new Dimension(50, 80));
        jScrollPane2.setViewportView(jTextArea1);

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(submit)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 233, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submit)
                .addGap(5, 5, 5))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane2;
    public JTable jTable1;
    private JTextArea jTextArea1;
    public JButton submit;
    // End of variables declaration//GEN-END:variables
}